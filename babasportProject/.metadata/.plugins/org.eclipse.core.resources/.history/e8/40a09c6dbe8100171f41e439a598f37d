package cn.babasport.controler;

import java.io.UnsupportedEncodingException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import cn.babasport.common.PageHelper.Page;
import cn.babasport.pojo.Brand;
import cn.babasport.service.BrandService;

/**
 * 品牌管理
 * @author Administrator
 *
 */
@Controller
public class BrandControler {
	
	@Autowired
	private BrandService brandService;
	
	
	/**
	 * 查询品牌的集合
	 * @param pageName
	 * @param model
	 * @param brand
	 * @return
	 * @throws Exception 
	 */
		@RequestMapping(value="/console/brand/{pageName}.do")
		public String consoleBrandShow(@PathVariable("pageName")String pageName,Model  model,Brand brand,
				Integer pageNum,Integer pageSize) throws Exception{
			System.out.println(pageName);
			//品牌查询,查询所有的品牌信息
			if(pageName!=null&&pageName.equals("list")){
				//解决get请求的中文乱码问题
				if(brand.getName()!=null){
					String name = new String( brand.getName().getBytes("ISO-8859-1"),"UTF-8");
					brand.setName(name);
				}
				//调用服务方根据条件查询品牌的集合
				
				Page<Brand> page = brandService.findByExample(brand,pageNum,pageSize);
				
				System.out.println(page.getResult().size());
				//将查询的数据放入model中,通过适配器将数据返回
				model.addAttribute("page",page);
			}
			//数据回显,将我们的查询的数据放入model中,前台页面从model中获取数据,就可以实现数据的回显功能
			model.addAttribute("name", brand.getName());
			model.addAttribute("isDisplay", brand.getIsDisplay());
			
			return "brand/"+pageName;
		}
		/**
		 * 根据id获取当对应的brand
		 * @param model
		 * @param id
		 * @return
		 */
		@RequestMapping(value="/console/brand/edit.do")
		public String edit(Model model,@RequestParam("id")Long id){
			Brand brand = brandService.findBrandById(id);
			System.out.println(brand);
			//将brand对象放入model
			model.addAttribute("brand", brand);
			return "brand/edit";
		}
		@RequestMapping(value="/console/brand/update.do")
		public String update(Model model,Brand brand){
			
				boolean b = brandService.updateBrandById(brand);
				if(b){
					return "redirect:/console/brand/list.do";
				}else{
					return "redirect:/console/error501.do";
				}
			
		}
		///console/brand/addBrand.do
		@RequestMapping("console/brand/addBrand.do")
		public String addBrand(){
			return "redirect:/console/brand/list.do";
		}
	
}
